{"version":3,"sources":["products.js"],"names":["express","require","router","Router","Product","get","req","res","data","regeneratorRuntime","async","_context","prev","next","awrap","find","sent","send","stop","post","prod","name","body","price","save","then","result","console","log","err","status","json","message","id","product","findById","_context2","params","deleteOne"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,OAASF,QAAQG,SADjBH,SAAUC,QAAQ,YAGlBG,QAAUH,QAAQ,qBAIxBC,OAAOG,IAAI,IAAK,SAAMC,EAAIC,GAAV,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,EAAAJ,mBAAAK,MAJQV,QAAAW,QAIR,KAAA,EAJAd,EAIAU,EAAAK,KAERT,EAAIU,KAAKT,GAFD,KAAA,EAAA,IAAA,MAAA,OAAAG,EAAAO,YAAAhB,OAAAiB,KAAA,IAAA,SAAAb,EAAAC,EAAAM,GAAA,IAAAO,EAAA,CAAAC,KAAAf,EAAAgB,KAAAD,KAAAE,MAAAjB,EAAAgB,KAAAC,OAAA,IAAAnB,QAAA,CAAAiB,KAAAf,EAAAgB,KAAAD,KACFb,MADEF,EAAAgB,KAAAC,QAAAC,OAAAC,KAAA,SAAAC,GAAAC,QAAAC,IAAAF,KAAA,MAAA,SAAAG,GAAAF,QAAAC,IAAAC,KAAAtB,EAAAuB,OAAA,KAAAC,KAAA,CAAAC,QAAA,sCAAhB5B,QAAAgB,MAQQC,OAAAA,IAAMf,cADG,SAAAA,EAAAC,EAAAM,GAETU,IAAKU,EAAMX,OAAKC,EAAAA,OAAAA,WAFpBW,QAAAC,SAAAF,KAMIZ,OAAAA,MAAQ,cAFgB,SAAAf,EAAAC,EAAAM,GAGxBU,EAAAA,OAAUD,KAAKC,KAAAA,CAHnBS,QAAA,4BAQC9B,OAFD,OAES,QAAA,SAAOI,EAAAC,GAAP,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAA0B,GAAA,OAAA,OAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,KAAA,EAAA,OAASc,QAAQC,IAAIC,EAAZQ,QAATD,EAAAvB,KAAA,EAAAJ,mBAAAK,MAFToB,QAAAI,UAAAhC,EAAA+B,SAES,KAAA,EAFT7B,EAES4B,EAAApB,KAETT,QAAAqB,IAAApB,GACIwB,EAAAA,MAHK,KAAA,EAAA,IAAA,MAAA,OAAAI,EAAAlB,YAObhB,OAAOG,QAAIH","file":"products.min.js","sourcesContent":["const express = require('express')\r\nconst router = express.Router();\r\nconst mongoose = require('mongoose')\r\nconst Product = require('../models/product');\r\n// const product = require('../models/product');\r\n\r\n\r\nrouter.get('/', async(req,res,next)=>{\r\n        const data = await Product.find()\r\n        res.send(data)\r\n       \r\n})\r\n\r\nrouter.post('/', (req,res,next)=>{\r\n    const prod = {\r\n        name: req.body.name,\r\n        price: req.body.price\r\n    }\r\n    const product = new Product({\r\n        // _id: new mongoose.Types.ObjectId(),\r\n        name:req.body.name,\r\n        price:req.body.price\r\n    })\r\n\r\n    product.save().then((result)=>{\r\n        console.log(result);\r\n    }).catch((err)=>{ console.log(err)})\r\n\r\n    res.status(200).json({\r\n        message:\"Handling POST requests to /products\",\r\n        Product: prod\r\n    })\r\n})\r\nrouter.get('/:productId', (req,res,next)=>{\r\n    const id = Number(req.params.productId)\r\n    product.findById(id)\r\n})\r\n\r\nrouter.patch('/:productId', (req,res,next)=>{\r\n    res.status(200).json({\r\n        message:\" Updated successfully\",\r\n    })\r\n})\r\nrouter.delete('/:_id', async (req,res,next)=>{\r\n    console.log(req.params);\r\n    const data = await product.deleteOne(req.params)\r\n    console.log(data);\r\n    res.end();\r\n        \r\n})\r\n\r\nmodule.exports = router"]}