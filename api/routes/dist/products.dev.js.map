{"version":3,"sources":["products.js"],"names":["express","require","router","Router","mongoose","Product","get","req","res","next","find","data","send","post","prod","name","body","price","product","save","then","result","console","log","err","status","json","message","id","Number","params","productId","findById","patch","deleteOne","end","module","exports"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AACA,IAAMC,QAAQ,GAAGH,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAMI,OAAO,GAAGJ,OAAO,CAAC,mBAAD,CAAvB,C,CACA;;;AAGAC,MAAM,CAACI,GAAP,CAAW,GAAX,EAAgB,iBAAMC,GAAN,EAAUC,GAAV,EAAcC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CACWJ,OAAO,CAACK,IAAR,EADX;;AAAA;AACFC,UAAAA,IADE;AAERH,UAAAA,GAAG,CAACI,IAAJ,CAASD,IAAT;;AAFQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;AAMAT,MAAM,CAACW,IAAP,CAAY,GAAZ,EAAiB,UAACN,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAgB;AAC7B,MAAMK,IAAI,GAAG;AACTC,IAAAA,IAAI,EAAER,GAAG,CAACS,IAAJ,CAASD,IADN;AAETE,IAAAA,KAAK,EAAEV,GAAG,CAACS,IAAJ,CAASC;AAFP,GAAb;AAIA,MAAMC,OAAO,GAAG,IAAIb,OAAJ,CAAY;AACxB;AACAU,IAAAA,IAAI,EAACR,GAAG,CAACS,IAAJ,CAASD,IAFU;AAGxBE,IAAAA,KAAK,EAACV,GAAG,CAACS,IAAJ,CAASC;AAHS,GAAZ,CAAhB;AAMAC,EAAAA,OAAO,CAACC,IAAR,GAAeC,IAAf,CAAoB,UAACC,MAAD,EAAU;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH,GAFD,WAES,UAACG,GAAD,EAAO;AAAEF,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AAAiB,GAFnC;AAIAhB,EAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,IAAAA,OAAO,EAAC,qCADS;AAEjBtB,IAAAA,OAAO,EAAES;AAFQ,GAArB;AAIH,CAnBD;AAoBAZ,MAAM,CAACI,GAAP,CAAW,aAAX,EAA0B,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAgB;AACtC,MAAMmB,EAAE,GAAGC,MAAM,CAACtB,GAAG,CAACuB,MAAJ,CAAWC,SAAZ,CAAjB;AACAb,EAAAA,OAAO,CAACc,QAAR,CAAiBJ,EAAjB;AACH,CAHD;AAKA1B,MAAM,CAAC+B,KAAP,CAAa,aAAb,EAA4B,UAAC1B,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAgB;AACxCD,EAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,IAAAA,OAAO,EAAC;AADS,GAArB;AAGH,CAJD;AAKAzB,MAAM,UAAN,CAAc,OAAd,EAAuB,kBAAOK,GAAP,EAAWC,GAAX,EAAeC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBa,UAAAA,OAAO,CAACC,GAAR,CAAYhB,GAAG,CAACuB,MAAhB;AADmB;AAAA,0CAEAZ,OAAO,CAACgB,SAAR,CAAkB3B,GAAG,CAACuB,MAAtB,CAFA;;AAAA;AAEbnB,UAAAA,IAFa;AAGnBW,UAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACAH,UAAAA,GAAG,CAAC2B,GAAJ;;AAJmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;AAQAC,MAAM,CAACC,OAAP,GAAiBnC,MAAjB","sourcesContent":["const express = require('express')\r\nconst router = express.Router();\r\nconst mongoose = require('mongoose')\r\nconst Product = require('../models/product');\r\n// const product = require('../models/product');\r\n\r\n\r\nrouter.get('/', async(req,res,next)=>{\r\n        const data = await Product.find()\r\n        res.send(data)\r\n       \r\n})\r\n\r\nrouter.post('/', (req,res,next)=>{\r\n    const prod = {\r\n        name: req.body.name,\r\n        price: req.body.price\r\n    }\r\n    const product = new Product({\r\n        // _id: new mongoose.Types.ObjectId(),\r\n        name:req.body.name,\r\n        price:req.body.price\r\n    })\r\n\r\n    product.save().then((result)=>{\r\n        console.log(result);\r\n    }).catch((err)=>{ console.log(err)})\r\n\r\n    res.status(200).json({\r\n        message:\"Handling POST requests to /products\",\r\n        Product: prod\r\n    })\r\n})\r\nrouter.get('/:productId', (req,res,next)=>{\r\n    const id = Number(req.params.productId)\r\n    product.findById(id)\r\n})\r\n\r\nrouter.patch('/:productId', (req,res,next)=>{\r\n    res.status(200).json({\r\n        message:\" Updated successfully\",\r\n    })\r\n})\r\nrouter.delete('/:_id', async (req,res,next)=>{\r\n    console.log(req.params);\r\n    const data = await product.deleteOne(req.params)\r\n    console.log(data);\r\n    res.end();\r\n        \r\n})\r\n\r\nmodule.exports = router"],"file":"products.dev.js"}